name: Deploy Node.js App to Azure VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Generate SSH Key Pair
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
          chmod 600 ~/.ssh/id_rsa

      - name: Upload SSH Key as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ssh-key
          path: ~/.ssh/id_rsa

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Ensure Virtual Machine Exists
        run: |
          if ! az vm show --resource-group manoj-rg --name test-vm --query 'name' --output tsv; then
            az vm create \
              --resource-group manoj-rg \
              --name test-vm \
              --image Ubuntu2204 \
              --admin-username azureuser \
              --public-ip-sku Standard \
              --size Standard_B2s \
              --output none
          fi

      - name: Open Ports 22 and 3000 in Security Group
        run: |
          az network nsg rule create \
            --resource-group manoj-rg \
            --nsg-name test-vmNSG \
            --name AllowSSH \
            --priority 1000 \
            --direction Inbound \
            --access Allow \
            --protocol Tcp \
            --source-port-ranges '*' \
            --destination-port-ranges 22 || true

          az network nsg rule create \
            --resource-group manoj-rg \
            --nsg-name test-vmNSG \
            --name AllowNodeApp \
            --priority 1010 \
            --direction Inbound \
            --access Allow \
            --protocol Tcp \
            --source-port-ranges '*' \
            --destination-port-ranges 3000 || true

      - name: Get VM Public IP
        run: |
          ip=$(az vm list-ip-addresses \
            --resource-group manoj-rg \
            --name test-vm \
            --query "[].virtualMachine.network.publicIpAddresses[0].ipAddress" \
            --output tsv)
          echo "VM Public IP: $ip"
          echo "ip=$ip" >> $GITHUB_ENV

      - name: Download SSH Key from Artifact
        uses: actions/download-artifact@v4
        with:
          name: ssh-key
          path: ~/.ssh

      - name: Set Correct Permissions for SSH Key
        run: chmod 600 ~/.ssh/id_rsa

      - name: Manually Add SSH Public Key to VM
        run: |
          PUBLIC_KEY=$(cat ~/.ssh/id_rsa.pub)
          az vm run-command invoke \
            --resource-group manoj-rg \
            --name test-vm \
            --command-id RunShellScript \
            --scripts "mkdir -p /home/azureuser/.ssh && echo \"$PUBLIC_KEY\" >> /home/azureuser/.ssh/authorized_keys && chmod 600 /home/azureuser/.ssh/authorized_keys && chown azureuser:azureuser /home/azureuser/.ssh/authorized_keys"

      - name: Verify SSH Connection
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@${{ env.ip }} "echo SSH Connection Successful"

      - name: Install Dependencies and Deploy Node.js App
        run: |
          ssh -tt -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@${{ env.ip }} << 'EOF'

            echo "Updating system packages..."
            export DEBIAN_FRONTEND=noninteractive
            sudo apt update -y && sudo apt upgrade -y --allow-downgrades --allow-change-held-packages

            echo "Installing required dependencies..."
            sudo apt install -y curl git unzip software-properties-common

            echo "Checking if Node.js is already installed..."
            if ! command -v node &> /dev/null; then
              echo "Installing Node.js 18 (LTS) and npm..."
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt install -y nodejs
            fi

            echo "Verifying Node.js & npm versions..."
            node -v
            npm -v

            echo "Updating npm to the latest version..."
            npm install -g npm@latest

            echo "Cloning or updating the project repository..."
            cd ~
            if [ -d "Swigy-Project" ]; then
                cd Swigy-Project
                git reset --hard HEAD
                git pull origin main
            else
                git clone https://${{ secrets.GIT_TOKEN }}@github.com/manoj7894/Swigy-Project.git
                cd Swigy-Project
            fi

            echo "Cleaning existing node_modules..."
            rm -rf node_modules package-lock.json

            echo "Installing project dependencies..."
            npm install --force

            echo "Checking if html-webpack-plugin is installed..."
            npm list html-webpack-plugin || npm install html-webpack-plugin --save-dev

            echo "Ensuring Webpack and required plugins exist..."
            npm install --save-dev webpack webpack-cli html-webpack-plugin

            echo "Building the application..."
            npm run build || npm run webpack

            echo "Starting the application..."
            nohup npm start > output.log 2>&1 &

            echo "Ensuring Port 3000 is Open..."
            sudo ufw allow 3000 || true

          EOF
