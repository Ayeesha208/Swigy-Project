name: Deploy Node.js App to Azure VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ✅ Generate SSH Key Pair
      - name: Generate SSH Key Pair
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
          chmod 600 ~/.ssh/id_rsa

      # ✅ Upload SSH Key as Artifact
      - name: Upload SSH Key as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ssh-key
          path: ~/.ssh/id_rsa

      # ✅ Login to Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      # ✅ Ensure VM Exists
      - name: Ensure Virtual Machine Exists
        run: |
          if ! az vm show --resource-group manoj-rg --name test-vm --query 'name' --output tsv; then
            az vm create \
              --resource-group manoj-rg \
              --name test-vm \
              --image Ubuntu2204 \
              --admin-username azureuser \
              --public-ip-sku Standard \
              --size Standard_B2s \
              --output none
          fi

      # ✅ Open Ports 22 and 3000 in Security Group
      - name: Open Ports 22 and 3000 in Security Group
        run: |
          az network nsg rule create \
            --resource-group manoj-rg \
            --nsg-name test-vmNSG \
            --name AllowSSH \
            --priority 1000 \
            --direction Inbound \
            --access Allow \
            --protocol Tcp \
            --source-port-ranges '*' \
            --destination-port-ranges 22 || true

          az network nsg rule create \
            --resource-group manoj-rg \
            --nsg-name test-vmNSG \
            --name AllowNodeApp \
            --priority 1010 \
            --direction Inbound \
            --access Allow \
            --protocol Tcp \
            --source-port-ranges '*' \
            --destination-port-ranges 3000 || true

      # ✅ Get VM Public IP
      - name: Get VM Public IP
        run: |
          ip=$(az vm list-ip-addresses \
            --resource-group manoj-rg \
            --name test-vm \
            --query "[].virtualMachine.network.publicIpAddresses[0].ipAddress" \
            --output tsv)
          echo "VM Public IP: $ip"
          echo "ip=$ip" >> $GITHUB_ENV

      # ✅ Download SSH Key from Artifact
      - name: Download SSH Key from Artifact
        uses: actions/download-artifact@v4
        with:
          name: ssh-key
          path: ~/.ssh

      # ✅ Set Correct Permissions for SSH Key
      - name: Set Correct Permissions for SSH Key
        run: chmod 600 ~/.ssh/id_rsa

      # ✅ Manually Add SSH Public Key to VM
      - name: Manually Add SSH Public Key to VM
        run: |
          PUBLIC_KEY=$(cat ~/.ssh/id_rsa.pub)
          az vm run-command invoke \
            --resource-group manoj-rg \
            --name test-vm \
            --command-id RunShellScript \
            --scripts "mkdir -p /home/azureuser/.ssh && echo \"$PUBLIC_KEY\" >> /home/azureuser/.ssh/authorized_keys && chmod 600 /home/azureuser/.ssh/authorized_keys && chown azureuser:azureuser /home/azureuser/.ssh/authorized_keys"

      # ✅ Verify SSH Connection
      - name: Verify SSH Connection
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@${{ env.ip }} "echo SSH Connection Successful"

      # ✅ Deploy Node.js App to VM
      - name: Deploy Node.js App
        run: |
          ssh -tt -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa azureuser@${{ env.ip }} << 'EOF'

          # ✅ Update System Packages
          echo "Updating system packages..."
          sudo apt update -y && sudo apt upgrade -y

          # ✅ Install Node.js 18 and npm
          echo "Installing Node.js 18 LTS..."
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y nodejs

          # ✅ Verify Installation
          echo "Node.js version: $(node -v)"
          echo "npm version: $(npm -v)"

          # ✅ Install PM2 for Process Management
          echo "Installing PM2..."
          sudo npm install -g pm2

          # ✅ Navigate to App Directory
          cd /home/azureuser

          # ✅ Clone or Update Repository
          if [ -d "Swigy-Project/.git" ]; then
            echo "Updating existing repository..."
            cd Swigy-Project
            git reset --hard HEAD
            git pull origin main
          else
            echo "Cloning fresh repository..."
            rm -rf Swigy-Project
            git clone https://${{ secrets.GIT_TOKEN }}@github.com/manoj7894/Swigy-Project.git
            cd Swigy-Project
          fi

          # ✅ Install Dependencies
          if [ -f package.json ]; then
            npm install
          else
            echo "Error: package.json not found!"
            exit 1
          fi

          # ✅ Stop Previous PM2 Process (if any)
          pm2 delete myapp || true

          # ✅ Start App with PM2
          echo "Starting application with PM2..."
          pm2 start npm --name "myapp" -- run start
          pm2 save
          pm2 restart myapp

          # ✅ Enable PM2 on Startup
          sudo env PATH=$PATH:/usr/bin pm2 startup systemd -u azureuser --hp /home/azureuser

          # ✅ Open Port 3000
          sudo ufw allow 3000 || true

          echo "Deployment complete!"
          EOF
